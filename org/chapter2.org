* அத்தியாயம் 2 - நிறுவுதல் (Installation)

** அமைப்பு
 சி இல் நிரலாக்கத்தை தொடங்குவதற்கு முன், நாம் ஒரு சில விஷயங்களை நிறுவ
 வேண்டும்,மற்றும் நமது பணிச்சூழல்(environment) அமைக்க வேண்டும் அதனால் நம்மக்கு
 தேவையான அனைத்தும் பூர்த்தியாகிவிடும். முக்கியமாக நாம் இரண்டு விஷயங்களை நிறுவ
 வேண்டும். ஒன்று உரைத்தொப்பி(Text editor) மற்றொன்று நிரல்மொழிமாற்றி(Compiler)
 
** உரைத்தொகுப்பி (Text Editor)

உரை திருத்தி என்பது நிரலாக்கத்திற்கு ஏற்ற வகையில் உரைக்கோப்புகளைத்(Text files)
திருத்த உங்களை அனுமதிக்கும் ஒரு நிரலாகும்.

லினக்ஸில், நான் பரிந்துரைக்கும் உரை திருத்தி ஜிஎடிட்(gedit). உங்கள் விநியோகத்துடன்
வேறு எந்த அடிப்படை உரை திருத்தி நிறுவப்பட்டாலும் அது நன்றாக வேலை செய்யும்.
நீங்கள் விம்(Vim) அல்லது இமேக்சு(Emacs) பயனராக இருந்தால், இவற்றைப் பயன்படுத்துவது
நல்லது.  தயவுசெய்து IDE ஐப் பயன்படுத்த வேண்டாம்.இது போன்ற சிறிய திட்டத்திற்கு இது
தேவையில்லை மற்றும் என்ன நடக்கிறது என்பதைப் புரிந்து கொள்ள உதவாது.

மாக்(Mac) இல் டெஸ்ட் வரங்களேர்(TextWrangler) பயன்படுத்தம். உங்களுக்கு வேறு
விருப்பம் இருந்தால் பரவாயில்லை, ஆனால் உரை திருத்துவதற்கு க்ஸ்கோடு(XCode) ஐப்
பயன்படுத்த வேண்டாம். இது ஒரு சிறிய திட்டம் மற்றும் IDE ஐப் பயன்படுத்துவதால் என்ன
நடக்கிறது என்பதைப் புரிந்துகொள்ள உங்களுக்கு உதவாது.

விண்டோஸில், நான் விரும்பும் உரை திருத்தி நோட்பேட்++ (Notepad++) அல்லது விஷுவல்
ஸ்டுடியோவைப் கொடு (Visual studio code) ஆகும். உங்களுக்கு வேறு விருப்பம்
இருந்தால் பரவாயில்லை. தயவு செய்து விஷுவல் ஸ்டுடியோவைப்(Visual studio)
பயன்படுத்த வேண்டாம் அது சி நிரலாக்கத்திற்கு சரியான தேர்வு இல்லை. நீங்கள் அதைப்
பயன்படுத்த முயற்சித்தால், நீங்கள் பல சிக்கல்களைச் சந்திக்க நேரிடும்.

** நிரல்மொழிமாற்றி (Compiler)

நிரல்மொழிமாற்றி என்பது சி மூலக் குறியீட்டை(source code) உங்கள் கணினி
இயக்கக்கூடிய நிரலாக மாற்றும் ஒரு நிரலாகும். நீங்கள் பயன்படுத்தும் இயக்குதளம்
(Operating System) பொறுத்து இவற்றுக்கான நிறுவல் செயல்முறை வேறுபடும்.

சி நிரல்மொழிமாற்றி இயக்குவதற்கு கட்டளை வரியின்(Command line) அடிப்படை பயன்பாடு
தேவைப்படும்.கட்டளை வரியை பற்றி இந்த புத்தகத்தில் தகவல் இருக்காது எனவே கட்டளை
வரியைப் பயன்படுத்துவதில் உங்களுக்கு குறைந்தபட்சம் ஓரளவு பரிச்சயம் இருப்பதாக நான்
கருதுகிறேன்.இதைப் பற்றி உங்களுக்கு அனுபவம் இல்லை என்றால் உங்கள் இயக்குதளம் பொருத்து
கட்டளை வரியை பற்றி இணையத்தில் பயிலுரை(Online tutorial) பார்த்துக்கொள்ளவும்.

லினக்ஸில் சில தொகுப்புகளைப்(packages) பதிவிறக்குவதன் மூலம் நிரல்மொழிமாற்றியை
நிறுவலாம்.நீங்கள் உபுண்டு(Ubuntu) அல்லது டெபியனை(Debian) இயக்குகிறீர்கள் என்றால்,
பின்வரும் கட்டளையுடன் உங்களுக்கு தேவையான அனைத்தையும் நிறுவலாம்
#+begin_src shell
  sudo apt install build-essential
#+end_src
நீங்கள் பெடோரா(Fedora) அல்லது ரெட் ஹட்(Redhat) இயக்கினால், இந்த கட்டளையைப்
பயன்படுத்தலாம்
#+begin_src shell
  su -c "yum groupinstall development-tools".
#+end_src
அல்லது உங்கள் லினக்ஸ் விநியோகம்(Linux distribution) ஏற்றவாறு இணையத்தில் பார்த்து
நிறுவிக்கொள்ளலாம்.

மாக்(Mac) இல், ஆப்பிள் இருந்து க்ஸ்கோடு(XCode) இன் சமீபத்திய பதிப்பைப் பதிவிறக்கி
நிறுவுவதன் மூலம் நிரல்மொழிமாற்றியை நிறுவலாம். இதை எப்படி செய்வது என்று
உங்களுக்குத் தெரியாவிட்டால், "க்ஸ்கோடு ஐ நிறுவுதல்" என்பதை ஆன்லைனில் தேடலாம் மற்றும்
காட்டப்படும் எந்த ஆலோசனையையும் பின்பற்றலாம். நீங்கள் கட்டளை வரி கருவிகளை நிறுவ
வேண்டும். இதற்கு மாக் OS X 10.9 இல், கட்டளை வரியிலிருந்து ~xcode-select
--install~ கட்டளையை இயக்குவதன் மூலம் இதைச் செய்யலாம். 10.9க்கு முந்தைய மாக் OS X
பதிப்புகளில், XCode விருப்பத்தேர்வுகள்(Perferences), பதிவிறக்கங்கள்(Downloads),
மற்றும் நிறுவலுக்கான கட்டளை வரி கருவிகளைத்(Command line tools) தேர்ந்தெடுப்பதன்
மூலம் இதைச் செய்யலாம்.

விண்டோஸில் நீங்கள் MinGW ஐ பதிவிறக்கம் செய்து நிறுவுவதன் மூலம் கம்பைலரை
நிறுவலாம். நிறுவப்பட்டதும், கம்பைலர் மற்றும் பிற நிரல்களை உங்கள் கணினி PATH
மாறியில்(Variable) சேர்க்க வேண்டும். இதைச் செய்ய, PATH எனப்படும் மாறிக்கு
;C:\MinGW\bin மதிப்பைச் சேர்க்கும் இந்த வழிமுறைகளைப் பின்பற்றவும். இந்த
மாறி(Variable) இல்லை என்றால் நீங்கள் உருவாக்கலாம். மாற்றங்கள் நடைமுறைக்கு வர, நீங்கள்
cmd.exe ஐ மறுதொடக்கம் செய்ய வேண்டியிருக்கலாம். கட்டளை வரி cmd.exe இலிருந்து
ஒரு கம்பைலரை இயக்க இது உங்களை அனுமதிக்கும். இது cmd.exe ஐ யூனிஸ் கட்டளை வரி
போல் செயல்பட வைக்கும் பிற நிரல்களையும் நிறுவும்.

*** நிரல்மொழிமாற்றி சோதித்தல் (Testing the compiler)
உங்கள் சி நிரல்மொழிமாற்றி சரியாக நிறுவப்பட்டுள்ளதா என்பதை சோதிக்க, கட்டளை
வரியில்(Command line) பின்வருவனவற்றை உள்ளிடவும்.

#+begin_src shell
  cc --version
#+end_src

நிரல்மொழிமாற்றி பதிப்பைப்(Compiler Version) பற்றிய சில தகவல்கள் மீண்டும்
எதிரொலித்தால், அது சரியாக நிறுவப்பட்டிருக்கிறது உங்களுக்கு அங்கீகரிக்கப்படாத
அல்லது கண்டுபிடிக்கப்படாத கட்டளையைப்(unrecognised or not found command) பற்றி
ஏதேனும் பிழைச் செய்தியைப் பெற்றால், நிரல்மொழிமாற்றி சரியாக நிறுவ
படவில்லை. மாற்றங்கள் நடைமுறைக்கு வர நீங்கள் கட்டளை வரி அல்லது உங்கள் கணினியை
மீள்தொடக்கம்(Restart) செய்ய வேண்டியிருக்கும்.

**** வெவ்வேறு நிரல்மொழிமாற்றி கட்டளைகள்.
சில கணினிகளில் (விண்டோஸ் போன்றவை) நிரல்மொழிமாற்றி கட்டளைக்கு ~gcc~ போன்ற வேறு
பெயர் இருக்கலாம். கணினியால் ~cc~ கட்டளையை கண்டுபிடிக்க முடியவில்லை என்றால் இதை
முயற்சிக்கவும்.

** உலகத்திற்கு வணக்கம் (Hello world)

<p>Now that your environment is set up, start by opening your text
editor and inputting the following program. Create a directory where
you are going to put your work for this book, and save this file as
<code>hello_world.c</code>. This is your first C program!</p>

<pre><code data-language='c'>#include &lt;stdio.h&gt;

int main(int argc, char** argv) { puts("Hello, world!"); return 0;
  }</code></pre>

<!-- <div class='pull-right alert alert-warning' style="margin: 15px;
text-align: center;"> <img src="/static/img/toast.png" alt="toast"/>
<p><small>Toast &bull; A typical toast</small></p> </div> -->

<p>This may initially make very little sense. I'll try to explain it
step by step.</p>

<p>In the first line we <em>include</em> what is called a
<em>header</em>. This statement allows us to use the functions from
<code>stdio.h</code>, the standard input and output library which
comes included with C. One of the functions from this library is the
<code>puts</code> function you see later on in the program.</p>

<p>Next we <em>declare</em> a function called <code>main</code>. This
function is declared to output an <code>int</code>, and take as input
an <code>int</code> called <code>argc</code> and a <code>char**</code>
called <code>argv</code>. All C programs must contain this
function. All programs start running from this function.</p>

<p>Inside <code>main</code> the <code>puts</code> function is
<em>called</em> with the argument <code>"Hello, world!"</code>. This
outputs the message <code>Hello, world!</code> to the command
line. The function <code>puts</code> is short for <em>put
string</em>. The second statement inside the function is <code>return
0;</code>. This tells the <code>main</code> function to finish and
return <code>0</code>. When a C program returns <code>0</code> this
indicates there have been no errors running the program.</p>

** மொழிமாற்றுதல்
<h2 id='compilation'>Compilation</h2> <hr/>

<p>Before we can run this program we need to compile it. This will
produce the actual <em>executable</em> we can run on our
computer. Open up the command line and browse to the directory that
<code>hello_world.c</code> is saved in. You can then compile your
program using the following command.</p>

<pre><code>cc -std=c99 -Wall hello_world.c -o hello_world</code></pre>

<p>This compiles the code in <code>hello_world.c</code>, reporting any
warnings, and outputs the program to a new file called
<code>hello_world</code>. We use the <code>-std=c99</code> flag to
tell the compiler which <em>version</em> or <em>standard</em> of C we
are programming with. This lets the compiler ensure our code is
standardised, so that people with different operating systems or
compilers will be able to use our code.</p>

<p>If successful you should see the output file in the current
directory. This can be run by typing <code>./hello_world</code> (or
just <code>hello_world</code> on Windows). If everything is correct
you should see a friendly <code>Hello, world!</code> message
appear.</p>

<p><strong>Congratulations!</strong> You've just compiled and run your
first C program.</p>

** பிழைகள் (Errors)
<h2 id='errors'>Errors</h2> <hr/>

<p>If there are some problems with your C program the compilation
process may fail. These issues can range from simple syntax errors, to
other complicated problems that are harder to understand.</p>

<p>Sometimes the error message from the compiler will make sense, but
if you are having trouble understanding it try searching online for
it. You should see if you can find a concise explanation of what it
means, and work out how to correct it. Remember this: there are many
people before you who have struggled with exactly the same
problems.</p>

<div class='pull-left alert alert-warning' style="margin: 15px;
  text-align: center;"> <img src="/static/img/smash.png" alt="smash"
  class="img-responsive" width="281px" height="220px"/> <p><small>Rage
  &bull; A poor debugging technique</small></p> </div>

<p>Sometimes there will be many compiler errors stemming from one
source. Always go through compiler errors from first to last.</p>

<p>Sometimes the compiler will compile a program, but when you run it
it will crash. Debugging C programs in this situation is hard. It can
be an art far beyond the scope of this book.</p>

<p>If you are a beginner, the first port of call for debugging a
crashing C program would be to print out lots of information as the
program is running. Using this method you should try to isolate
exactly what part of the code is incorrect and what, if anything, is
going wrong. It is a debugging technique which is
<em>active</em>. This is the important thing. As long as you are doing
<em>something</em>, and not just staring at the code, the process is
less painful and the temptation to give up is lessened.</p>

<p>For people feeling more confident a program called <code>gdb</code>
can be used to debug your C programs. This can be difficult and
complicated to use, but it is also very powerful and can give you
extremely valuable information and what went wrong and
where. Information on how to use <code>gdb</code> can be found <a
href="http://web.archive.org/web/20140910051410/http://www.dirac.org/linux/gdb/">online</a>.</p>

<p>On <strong>Mac</strong> the most recent versions of OS X don't come
with <code>gdb</code>. Instead you can use <code>lldb</code> which
does largely the same job.</p>

<p>On <strong>Linux</strong> or <strong>Mac</strong>
<code>valgrind</code> can be used to aid the debugging of memory leaks
and other more nasty errors. Valgrind is a tool that can save you
hours, or even days, of debugging. It does not take much to get
proficient at it, so investigating it is highly
recommended. Information on how to use it can be found <a
href="http://www.cprogramming.com/debugging/valgrind.html">online</a>.</p>

** ஆவணப்படுத்தல் (Documentation)
<h2 id='documentation'>Documentation</h2> <hr/>

<p>Through this book you may come across a function in some example
code that you don't recognise. You might wonder what it does. In this
case you will want to look at the <a
href="http://en.cppreference.com/w/c">online documentation</a> of the
standard library. This will explain all the functions included in the
standard library, what they do, and how to use them.</p>

** குறிப்பு (Reference)
<h2>Reference</h2> <hr/>

<div class="alert alert-warning"> <p><strong>What is this section
  for?</strong></p>

  <p>In this section I'll link to the code I've written for this
  particular chapter of the book. When finishing with a chapter your
  code should probably look similar to mine. This code can be used for
  reference if the explanation has been unclear.</p>

  <p>If you encounter a bug please do not copy and paste my code into
your project. Try to track down the bug yourself and use my code as a
reference to highlight what may be wrong, or where the error may
lie.</p> </div>

<references />

** வெகுமதி மதிப்பெண் (Bonus Marks)
<h2>Bonus Marks</h2> <hr/>

<div class="alert alert-warning"> <p><strong>What is this section
  for?</strong></p>

  <p>In this section I'll list some things to try for fun, and
  learning.</p>

  <p>It is good if you can attempt to do some of these
  challenges. Some will be difficult and some will be much easier. For
  this reason don't worry if you can't figure them all out. Some might
  not even be possible!</p>

  <p>Many will require some research on the internet. This is an
integral part of learning a new language so should not be avoided. The
ability to teach yourself things is one of the most valuable skills in
programming.</p> </div>

<div class="alert alert-warning"> <ul class="list-group"> <li
  class="list-group-item">&rsaquo; Change the <code>Hello
  World!</code> greeting given by your program to something
  different.</li> <li class="list-group-item">&rsaquo; What happens
  when no <code>main</code> function is given?</li> <li
  class="list-group-item">&rsaquo; Use the online documentation to
  lookup the <code>puts</code> function.</li> <li
  class="list-group-item">&rsaquo; Look up how to use <code>gdb</code>
  and run it with your program.</li> </ul> </div>

<h2>Navigation</h2>

<table class="table" style='table-layout: fixed;'> <tr> <td
  class="text-left"><a href="chapter1_introduction"><h4>&lsaquo;
  Introduction</h4></a></td> <td class="text-center"><a
  href="contents"><h4>&bull; Contents &bull;</h4></a></td> <td
  class="text-right"><a href="chapter3_basics"><h4>Basics
  &rsaquo;</h4></a></td> </tr> </table>
