* அத்தியாயம் 2 - நிறுவுதல் (Installation)

** அமைப்பு
 சி இல் நிரலாக்கத்தை தொடங்குவதற்கு முன், நாம் ஒரு சில விஷயங்களை நிறுவ
 வேண்டும்,மற்றும் நமது பணிச்சூழல்(environment) அமைக்க வேண்டும் அதனால் நம்மக்கு
 தேவையான அனைத்தும் பூர்த்தியாகிவிடும். முக்கியமாக நாம் இரண்டு விஷயங்களை நிறுவ
 வேண்டும். ஒன்று உரைத்தொப்பி(Text editor) மற்றொன்று நிரல்மொழிமாற்றி(Compiler)
 
** உரைத்தொகுப்பி (Text Editor)

உரை திருத்தி என்பது நிரலாக்கத்திற்கு ஏற்ற வகையில் உரைக்கோப்புகளைத்(Text files)
திருத்த உங்களை அனுமதிக்கும் ஒரு நிரலாகும்.

லினக்ஸில், நான் பரிந்துரைக்கும் உரை திருத்தி ஜிஎடிட்(gedit). உங்கள் விநியோகத்துடன்
வேறு எந்த அடிப்படை உரை திருத்தி நிறுவப்பட்டாலும் அது நன்றாக வேலை செய்யும்.
நீங்கள் விம்(Vim) அல்லது இமேக்சு(Emacs) பயனராக இருந்தால், இவற்றைப் பயன்படுத்துவது
நல்லது.  தயவுசெய்து IDE ஐப் பயன்படுத்த வேண்டாம்.இது போன்ற சிறிய திட்டத்திற்கு இது
தேவையில்லை மற்றும் என்ன நடக்கிறது என்பதைப் புரிந்து கொள்ள உதவாது.

மாக்(Mac) இல் டெஸ்ட் வரங்களேர்(TextWrangler) பயன்படுத்தம். உங்களுக்கு வேறு
விருப்பம் இருந்தால் பரவாயில்லை, ஆனால் உரை திருத்துவதற்கு க்ஸ்கோடு(XCode) ஐப்
பயன்படுத்த வேண்டாம். இது ஒரு சிறிய திட்டம் மற்றும் IDE ஐப் பயன்படுத்துவதால் என்ன
நடக்கிறது என்பதைப் புரிந்துகொள்ள உங்களுக்கு உதவாது.

விண்டோஸில், நான் விரும்பும் உரை திருத்தி நோட்பேட்++ (Notepad++) அல்லது விஷுவல்
ஸ்டுடியோவைப் கொடு (Visual studio code) ஆகும். உங்களுக்கு வேறு விருப்பம்
இருந்தால் பரவாயில்லை. தயவு செய்து விஷுவல் ஸ்டுடியோவைப்(Visual studio)
பயன்படுத்த வேண்டாம் அது சி நிரலாக்கத்திற்கு சரியான தேர்வு இல்லை. நீங்கள் அதைப்
பயன்படுத்த முயற்சித்தால், நீங்கள் பல சிக்கல்களைச் சந்திக்க நேரிடும்.

** நிரல்மொழிமாற்றி (Compiler)

நிரல்மொழிமாற்றி என்பது சி மூலக் குறியீட்டை(source code) உங்கள் கணினி
இயக்கக்கூடிய நிரலாக மாற்றும் ஒரு நிரலாகும். நீங்கள் பயன்படுத்தும் இயக்குதளம்
(Operating System) பொறுத்து இவற்றுக்கான நிறுவல் செயல்முறை வேறுபடும்.

சி நிரல்மொழிமாற்றி இயக்குவதற்கு கட்டளை வரியின்(Command line) அடிப்படை பயன்பாடு
தேவைப்படும்.கட்டளை வரியை பற்றி இந்த புத்தகத்தில் தகவல் இருக்காது எனவே கட்டளை
வரியைப் பயன்படுத்துவதில் உங்களுக்கு குறைந்தபட்சம் ஓரளவு பரிச்சயம் இருப்பதாக நான்
கருதுகிறேன்.இதைப் பற்றி உங்களுக்கு அனுபவம் இல்லை என்றால் உங்கள் இயக்குதளம் பொருத்து
கட்டளை வரியை பற்றி இணையத்தில் பயிலுரை(Online tutorial) பார்த்துக்கொள்ளவும்.

லினக்ஸில் சில தொகுப்புகளைப்(packages) பதிவிறக்குவதன் மூலம் நிரல்மொழிமாற்றியை
நிறுவலாம்.நீங்கள் உபுண்டு(Ubuntu) அல்லது டெபியனை(Debian) இயக்குகிறீர்கள் என்றால்,
பின்வரும் கட்டளையுடன் உங்களுக்கு தேவையான அனைத்தையும் நிறுவலாம்
#+begin_src shell
  sudo apt install build-essential
#+end_src
நீங்கள் பெடோரா(Fedora) அல்லது ரெட் ஹட்(Redhat) இயக்கினால், இந்த கட்டளையைப்
பயன்படுத்தலாம்
#+begin_src shell
  su -c "yum groupinstall development-tools".
#+end_src
அல்லது உங்கள் லினக்ஸ் விநியோகம்(Linux distribution) ஏற்றவாறு இணையத்தில் பார்த்து
நிறுவிக்கொள்ளலாம்.

மாக்(Mac) இல், ஆப்பிள் இருந்து க்ஸ்கோடு(XCode) இன் சமீபத்திய பதிப்பைப் பதிவிறக்கி
நிறுவுவதன் மூலம் நிரல்மொழிமாற்றியை நிறுவலாம். இதை எப்படி செய்வது என்று
உங்களுக்குத் தெரியாவிட்டால், "க்ஸ்கோடு ஐ நிறுவுதல்" என்பதை ஆன்லைனில் தேடலாம் மற்றும்
காட்டப்படும் எந்த ஆலோசனையையும் பின்பற்றலாம். நீங்கள் கட்டளை வரி கருவிகளை நிறுவ
வேண்டும். இதற்கு மாக் OS X 10.9 இல், கட்டளை வரியிலிருந்து ~xcode-select
--install~ கட்டளையை இயக்குவதன் மூலம் இதைச் செய்யலாம். 10.9க்கு முந்தைய மாக் OS X
பதிப்புகளில், XCode விருப்பத்தேர்வுகள்(Perferences), பதிவிறக்கங்கள்(Downloads),
மற்றும் நிறுவலுக்கான கட்டளை வரி கருவிகளைத்(Command line tools) தேர்ந்தெடுப்பதன்
மூலம் இதைச் செய்யலாம்.

விண்டோஸில் நீங்கள் MinGW ஐ பதிவிறக்கம் செய்து நிறுவுவதன் மூலம் கம்பைலரை
நிறுவலாம். நிறுவப்பட்டதும், கம்பைலர் மற்றும் பிற நிரல்களை உங்கள் கணினி PATH
மாறியில்(Variable) சேர்க்க வேண்டும். இதைச் செய்ய, PATH எனப்படும் மாறிக்கு
;C:\MinGW\bin மதிப்பைச் சேர்க்கும் இந்த வழிமுறைகளைப் பின்பற்றவும். இந்த
மாறி(Variable) இல்லை என்றால் நீங்கள் உருவாக்கலாம். மாற்றங்கள் நடைமுறைக்கு வர, நீங்கள்
cmd.exe ஐ மறுதொடக்கம் செய்ய வேண்டியிருக்கலாம். கட்டளை வரி cmd.exe இலிருந்து
ஒரு கம்பைலரை இயக்க இது உங்களை அனுமதிக்கும். இது cmd.exe ஐ யூனிஸ் கட்டளை வரி
போல் செயல்பட வைக்கும் பிற நிரல்களையும் நிறுவும்.

*** நிரல்மொழிமாற்றி சோதித்தல் (Testing the compiler)
உங்கள் சி நிரல்மொழிமாற்றி சரியாக நிறுவப்பட்டுள்ளதா என்பதை சோதிக்க, கட்டளை
வரியில்(Command line) பின்வருவனவற்றை உள்ளிடவும்.

#+begin_src shell
  cc --version
#+end_src

நிரல்மொழிமாற்றி பதிப்பைப்(Compiler Version) பற்றிய சில தகவல்கள் மீண்டும்
எதிரொலித்தால், அது சரியாக நிறுவப்பட்டிருக்கிறது உங்களுக்கு அங்கீகரிக்கப்படாத
அல்லது கண்டுபிடிக்கப்படாத கட்டளையைப்(unrecognised or not found command) பற்றி
ஏதேனும் பிழைச் செய்தியைப் பெற்றால், நிரல்மொழிமாற்றி சரியாக நிறுவ
படவில்லை. மாற்றங்கள் நடைமுறைக்கு வர நீங்கள் கட்டளை வரி அல்லது உங்கள் கணினியை
மீள்தொடக்கம்(Restart) செய்ய வேண்டியிருக்கும்.

**** வெவ்வேறு நிரல்மொழிமாற்றி கட்டளைகள்.
சில கணினிகளில் (விண்டோஸ் போன்றவை) நிரல்மொழிமாற்றி கட்டளைக்கு ~gcc~ போன்ற வேறு
பெயர் இருக்கலாம். கணினியால் ~cc~ கட்டளையை கண்டுபிடிக்க முடியவில்லை என்றால் இதை
முயற்சிக்கவும்.

** உலகத்திற்கு வணக்கம் (Hello world)

இப்போது உங்கள் பணிச்சூழல் அமைத்து விட்டாச்சு, உங்கள் உரை திருத்தியைத் திறந்து
பின்வரும் நிரலை உள்ளிடவும். இந்தப் புத்தகத்தை பின்பற்ற ஒரு கோப்புறை (Folder)
உருவாக்கி அதை பணியப்படுத்தவும், அதில் நிரலை hello_world.c என்று கோப்பில்(File)
சேமிக்கவும். இது உங்களின் முதல் சி நிரல்!

#+begin_src c
  #include<stdio.h>
  int main(int argc, char** argv)
  {
    puts("Hello world!");
    return 0;
  }
#+end_src

இது ஆரம்பத்தில் புரியாமல் இருக்கலாம். நான் அதை படிப்படியாக விளக்க முயற்சிப்பேன்.

முதல் வரியில் நாம் தலைப்பு(Header) என்று அழைக்கப்படுவதை உள்ளடக்குகிறோம். இந்த
அறிக்கையானது(Statement) stdio.h இருந்து செயல்பாடுகளைப் பயன்படுத்த
அனுமதிக்கிறது, இது சி உடன் சேர்க்கப்படும் தரநிலை உள்ளீடு மற்றும்
வெளியீட்டு(Standard input and output) நூலகம் ஆகும்.இந்த நூலகத்தின்
செயல்பாடுகளில் ஒன்று, நிரலில் நீங்கள் பின்னர் பார்க்கும் புட்ஸ்(Puts) செயல்பாடு ஆகும்.

அடுத்து நாம் முதன்மை(main) எனப்படும் ஒரு செயல்பாட்டை(function)
அறிவிக்கிறோம். இந்த செயல்பாடு ஒரு int ஐ வெளியிடுவதாக அறிவிக்கப்படுகிறது,
மேலும் argc எனப்படும் ஒரு int மற்றும் argv எனப்படும் char** ஐ உள்ளீடாக எடுத்துக்
கொள்ளும். அனைத்து சி நிரல்களும் இந்த செயல்பாட்டைக் கொண்டிருக்க வேண்டும். அனைத்து
நிரல்களும் இந்த செயல்பாட்டிலிருந்து இயங்கத் தொடங்குகின்றன.

~முதன்மை~ உள்ளே "ஹலோ, வேர்ல்ட்!"(Hello World) என்ற வாதத்துடன்(Arguments)
~புட்ஸ்(puts)~ செயல்பாடு அழைக்கப்படுகிறது.  இது ~Hello, world!~ என்ற செய்தியை
கட்டளை வரிக்கு வெளியிடுகிறது. புட்ஸ் செயல்பாடு என்பது சாரத்தை(String) வெளியீடு என்று
குறுகியது. செயல்பாட்டின் உள்ளே இருக்கும் இரண்டாவது அறிக்கை return 0;. இது
முதன்மை செயல்பாட்டைக்கு 0 வழங்கி நிரலை முடிக்கச்சொல்கிறது. ஒரு சி நிரல் 0 ஐ
வழங்கும் போது, ​​நிரலை இயக்குவதில் பிழைகள் எதுவும் இல்லை என்பதை இது குறிக்கிறது.

** நிரல்மொழிமாற்றுதல்(Compilation)

இந்த நிரலை இயக்குவதற்கு முன், இதை நிரல்மொழிமாற்றுதல் செய்ய வேண்டும். இது நமது
கணினியில் செயல்படுத்தக்கூடிய குறியீடாய்(Executable code) உருவாக்கும். கட்டளை
வரியைத் திறந்து, hello_world.c என்று சேமிக்கப்பட்டுள்ள கோப்பகத்துக்கு(Folder)
செல்லவும் . பின்வரும் கட்டளையைப் பயன்படுத்தி உங்கள் நிரலைத் நிரல்மொழிமாற்றலாம்.

#+begin_src shell
  cc -std=c99 -Wall hello_world.c -o hello_world
#+end_src

இது hello_world.c இல் உள்ள குறியீட்டைத் நிரல்மொழிமாற்றி, ஏதேனும்
எச்சரிக்கை(Warnings) இருந்தால் புகாரளிக்கும் மற்றும் hello_world எனப்படும் புதிய
கோப்பில் நிரலை வெளியிடுகிறது. நாம் சி(C) யை எந்த தரநிலை(Standard) அல்லது
பாதிப்புடன் (version) நிரலாக்குகிறோம் என்பதை நிரல்மொழிமாற்றியிடம் சொல்ல
-std=c99 என்ற கொடியைப் பயன்படுத்துகிறோம். இது எங்கள் குறியீடு
தரநிலையாக்கப்பட்டுள்ளதை நிரல்மொழிமாற்றி உறுதிப்படுத்துகிறது, இதனால் வெவ்வேறு
இயங்குதளங்கள் அல்லது நிரல்மொழிமாற்றிகள் உள்ளவர்கள் இந்த குறியீட்டைப் பயன்படுத்த
முடியும்.

வெற்றிகரமாக இருந்தால், தற்போதைய கோப்பகத்தில் வெளியீட்டு கோப்பைப்(Output file)
பார்க்க வேண்டும். இதை ./hello_world (அல்லது விண்டோஸ் இல் hello_world) என
தட்டச்சு செய்து இயக்கலாம். எல்லாம் சரியாக இருந்தால், நீங்கள் Hello, world! என்ற செய்தி
தோன்றும்.

வாழ்த்துகள்! நீங்கள் உங்கள் முதல் C நிரலை நிரல்மொழிமாற்றி இயக்கியுள்ளீர்கள்.

** பிழைகள் (Errors)

உங்கள் சி நிரலில் சில சிக்கல்கள் இருந்தால், நிரல்மொழிமாற்றி செயல்முறை(Process)
தோல்வியடையலாம். இந்தச் சிக்கல்கள் எளிமையான தொடரியல் பிழைகள்(Syntax errors) முதல்
புரிந்து கொள்ள கடினமாக இருக்கும் சிக்கல்கள் வரை இருக்கலாம்.

சில சமயங்களில் நிரல்மொழிமாற்றில் இருந்து வரும் பிழைச் செய்தி அர்த்தமுள்ளதாக
இருக்கும், ஆனால் அதைப் புரிந்துகொள்ள முடியவில்லை என்றால், அதை இணையத்தில் தேடி
பார்க்கவும். பிழைச் செய்தி என்ன என்பதற்கான சுருக்கமான விளக்கத்தை உங்களால்
கண்டுபிடிக்க முடியுமா என்பதைப் பார்க்கவும், அதை எவ்வாறு சரிசெய்வது என்பதைத்
தெரிந்துகொள்ளவும். இதை நினைவில் வையுங்கள்: உங்களுக்கு முன்னால் இதே போன்ற
பிரச்சனைகளுடன் போராடிய பலர் உள்ளனர்.

சில நேரங்களில் ஒரு மூலத்திலிருந்து(Source file) பல நிரல்மொழிமாற்றி பிழைகள்
ஏற்படும். எப்பொழுதும் நிரல்மொழிமாற்றி பிழைகளை முதலில் இருந்து கடைசி வரை
பார்க்கவும்.

சில நேரங்களில் நிரல்மொழிமாற்றி ஒரு நிரலைத் நிரல்மொழிமாற்றலாம், ஆனால் நீங்கள் அதை
இயக்கும்போது அது செயலிழக்கும்(Crash). இந்த சூழ்நிலையில் சி நிரல்களை
பிழைத்திருத்தம் செய்வது கடினம். இது இந்தப் புத்தகத்தின் எல்லைக்கு அப்பாற்பட்ட ஒரு
தாவல் அதனால் குறிப்பிடப்படவில்லை.

நீங்கள் ஒரு தொடக்கநிலையாளராக(Beginner) இருந்தால், செயலிழக்கும் சி நிரலை
பிழைத்திருத்துவதற்கான முதல் முயற்சி நிரல் இயங்கும் போது நிறைய தகவல்களை
அச்சிட(Print) வேண்டும். இந்த முறையைப் பயன்படுத்தி, குறியீட்டின் எந்தப் பகுதி
தவறானது மற்றும் ஏதேனும் தவறு நடந்தால், சரியாகத் தனிமைப்படுத்தி முயற்சிக்க
வேண்டும். இது செயலார்ந்த(Active) பிழைத்திருத்த நுட்பமாகும்(Debugging). இதுதான்
முக்கியமான விஷயம். ஒரு செயலை செயலற்ற(Passive) முறையில் கவனிப்பதை விட செயலில்
ஈடுபட்டாள் அந்த செயல் வேகமாக முடியும்.

ஆர்வம் உள்ளவர்களுக்கு, உங்கள் சி நிரல்களை பிழைத்திருத்த gdb எனப்படும் நிரல்
பயன்படுத்தப்படலாம். இது பயன்படுத்த கடினமாகவும் சிக்கலாகவும் இருக்கலாம், ஆனால் இது
மிகவும் சக்தி வாய்ந்தது மற்றும் உங்களுக்கு மிகவும் மதிப்புமிக்க தகவலையும், என்ன
தவறு, எங்கு நடந்தது என்பதையும் வழங்க முடியும். gdb ஐ எவ்வாறு பயன்படுத்துவது
என்பது பற்றிய தகவல்களை இணையத்தில் காணலாம்.

மாக் இல் OS X இன் சமீபத்திய பதிப்புகள் gdb உடன் வரவில்லை. அதற்கு பதிலாக நீங்கள்
lldb ஐப் பயன்படுத்தலாம், இது பெரும்பாலும் அதே வேலையைச் செய்கிறது.

லினக்ஸ் அல்லது மாக் இல் valgrind நினைவக கசிவுகள்(Memory Leaks) மற்றும் பிற
மோசமான பிழைகள் பிழைத்திருத்தத்திற்கு உதவ பயன்படுகிறது. Valgrind என்பது
பிழைத்திருத்தத்தில் பல மணிநேரம் அல்லது நாட்களைக் கூட சேமிக்கக்கூடிய ஒரு
கருவியாகும். அதில் நிபுணத்துவம் பெறுவதற்கு அதிக நேரம் எடுக்காது, எனவே அதை
மிகவும் பரிந்துரைக்கப்படுகிறது. அதை எவ்வாறு பயன்படுத்துவது என்பது பற்றிய
தகவல்களை இணையத்தில் காணலாம்.

** ஆவணமாக்கம் (Documentation)

இந்தப் புத்தகத்தின் மூலம் நீங்கள் அடையாளம் காணாத சில உதாரணக் குறியீட்டில் ஒரு
செயல்பாட்டைக் காணலாம். அது என்ன செய்கிறது என்று நீங்கள் ஆச்சரியப்படலாம். இந்த
விஷயத்தில், தரநிலை நூலகத்தின்(Standard library) இணையத்தில் ஆவணங்களை நீங்கள்
பார்க்க வேண்டும். இது தரநிலை நூலகத்தில் உள்ள அனைத்து செயல்பாடுகளையும், அவை என்ன
செய்கின்றன, அவற்றை எவ்வாறு பயன்படுத்துவது என்பதை விளக்கும்.

<h2 id='documentation'>Documentation</h2> <hr/>

<p>Through this book you may come across a function in some example
code that you don't recognise. You might wonder what it does. In this
case you will want to look at the <a
href="http://en.cppreference.com/w/c">online documentation</a> of the
standard library. This will explain all the functions included in the
standard library, what they do, and how to use them.</p>

** குறிப்பு (Reference)
<h2>Reference</h2> <hr/>

<div class="alert alert-warning"> <p><strong>What is this section
  for?</strong></p>

  <p>In this section I'll link to the code I've written for this
  particular chapter of the book. When finishing with a chapter your
  code should probably look similar to mine. This code can be used for
  reference if the explanation has been unclear.</p>

  <p>If you encounter a bug please do not copy and paste my code into
your project. Try to track down the bug yourself and use my code as a
reference to highlight what may be wrong, or where the error may
lie.</p> </div>

<references />

** வெகுமதி மதிப்பெண் (Bonus Marks)
<h2>Bonus Marks</h2> <hr/>

<div class="alert alert-warning"> <p><strong>What is this section
  for?</strong></p>

  <p>In this section I'll list some things to try for fun, and
  learning.</p>

  <p>It is good if you can attempt to do some of these
  challenges. Some will be difficult and some will be much easier. For
  this reason don't worry if you can't figure them all out. Some might
  not even be possible!</p>

  <p>Many will require some research on the internet. This is an
integral part of learning a new language so should not be avoided. The
ability to teach yourself things is one of the most valuable skills in
programming.</p> </div>

<div class="alert alert-warning"> <ul class="list-group"> <li
  class="list-group-item">&rsaquo; Change the <code>Hello
  World!</code> greeting given by your program to something
  different.</li> <li class="list-group-item">&rsaquo; What happens
  when no <code>main</code> function is given?</li> <li
  class="list-group-item">&rsaquo; Use the online documentation to
  lookup the <code>puts</code> function.</li> <li
  class="list-group-item">&rsaquo; Look up how to use <code>gdb</code>
  and run it with your program.</li> </ul> </div>

<h2>Navigation</h2>

<table class="table" style='table-layout: fixed;'> <tr> <td
  class="text-left"><a href="chapter1_introduction"><h4>&lsaquo;
  Introduction</h4></a></td> <td class="text-center"><a
  href="contents"><h4>&bull; Contents &bull;</h4></a></td> <td
  class="text-right"><a href="chapter3_basics"><h4>Basics
  &rsaquo;</h4></a></td> </tr> </table>
