* அத்தியாயம் 1 - அறிமுகம்
** புத்தகத்தை பற்றி
இந்தப் புத்தகத்தில் நீங்கள் சி(C) நிரலாக்க மொழியைக் கற்றுக்கொள்வீர்கள், அதே நேரத்தில்
~உங்கள் சொந்த நிரலாக்க மொழி~, சிறிய லிஸ்ப்(LISP), 1000 வரிகளுக்குக் கீழ்
எவ்வாறு உருவாக்குவது என்பதை அறிந்து கொள்வீர்கள்!ஆரம்பத்தில் சிலவற்றைச் செய்ய நாம் ஒரு
நூலகத்தைப்(library) பயன்படுத்துவோம், எனவே வரி எண்ணிக்கையில் நான் கொஞ்சம்
ஏமாற்றுகிறேன், ஆனால் மீதமுள்ள நிரல் முற்றிலும் அசலாக இருக்கும், மேலும் நீங்கள்
உண்மையிலேயே சக்திவாய்ந்த சிறிய லிஸ்ப்பை உருவாக்குவீர்கள்.

இந்த புத்தகம் நிரலாக்க மொழியை எப்படி அடிபடையில் இருந்து உருவாக்குவது என்று
எழுதப்பட்டப் பிற கட்டுரையால் ஊக்கம் பெற்றுவுள்ளது, இந்த வகையான வேடிக்கையான மற்றும்
ஆக்கபூர்வமான செயற்றிட்டம்(project) ஒரு மொழியைக் கற்றுக்கொள்வதற்கான சிறந்த
வழியாகும் என்பதைக் காட்ட இந்த புத்தகத்தை எழுதினேன், மற்றும் சுருக்கமான உயர்நிலை
மொழிகள் அல்லது அனுபவம் வாய்ந்த புரோகிராமர்களுக்கு மட்டும் அல்ல.

பலர் சி(C) கற்றுக்கொள்ள ஆர்வமாக உள்ளனர், ஆனால் எப்படி அரம்பிப்பது என்று
தெரியவில்லை. இனிமேல் அந்த சாக்கு இல்லை. நீங்கள் இந்த புத்தகத்தை பின்பற்றினால் நான்
உறுதியளிக்க முடியும் நீங்கள் ஒரு அனுபவமிக்க சி புரோகிராமராகவும் மாறுவீர்கள் என்று
நம்புகிறேன்! அல்லது நீங்கள் விளையாடுவதற்கு ஒரு புதிய நிரலாக்க மொழியைப்
பெறுவீர்கள்.

** இது யாருக்காக

இந்தப் புத்தகம் சி கற்க விரும்பும் எல்லோருக்கும் அல்லது தங்கள் சொந்த நிரலாக்க மொழியை
எவ்வாறு உருவாக்குவது என்று ஒருமுறையாவது யோசித்தவர்க்கு. இந்த புத்தகம் முதல்
நிரலாக்க மொழி புத்தகமாக பொருந்தாது, ஆனால் குறைந்தபட்ச நிரலாக்க அனுபவம் உள்ள
எவரும், எந்த நிரலாக்க மொழி பயன்படுத்திருத்தலும் அவர்கள் புதிய மற்றும் சுவாரஸ்யமான ஒன்றை
உள்ளே காண்பிர்கள்.

இந்த புத்தகம் முடிந்த வரை புதியவர்களுக்கு எளிமையாக
எழுதப்பட்டுயுள்ளது. புதியவர்களை நான் மிகவும் வரவேற்கிறேன், ஏனென்றால் அவர்கள்
அறிவதற்கு பல இருக்கிறது! ஆனால் புதியவர்களுக்கு இந்த புத்தகம் சவாலாக இருக்கலாம்.
நாங்கள் பல புதிய கருத்துகளை உள்ளடக்கி, அடிப்படையில் இரண்டு புதிய நிரலாக்க
மொழிகளை ஒரே நேரத்தில் கற்கலாம்.


<p>If you look for help you may find people are not patient with
you. You may find that, rather than help, they take the time to
express how much <em>they</em> know about the subject. Experienced
programmers might tell you that you are wrong. The subtext to their
tone might be that you should stop now, rather than inflict your bad
code on the world.</p>



<p>After a couple of engagements like this you may decide that you are
<em>not a programmer</em>, or <em>don't really like programming</em>,
or that you just <em>don't get it</em>. You may have thought that you
<em>once enjoyed</em> the idea of building your own programming
language, but now you have realised that it is too abstract and you
<em>don't care any more</em>. You are now concerned with your other
passions, and any insight that may have been playful, joyful or
interesting will now have become an obstacle.</p>

<p>For this I can only apologise. Programmers can be hostile, macho,
arrogant, insecure, and aggressive. There is no excuse for this
behaviour. Know that I am on your side. No one <em>gets it</em> at
first. Everyone struggles and doubts their abilities. Please don't
give up or let the joy be sucked out of the creative experience. Be
proud of what you create no matter what it is. People like me don't
want you to stop programming. We want to hear your voice, and what you
have to say.</p>
